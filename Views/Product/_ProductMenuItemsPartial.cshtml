@model List<POSRestoran01.Models.MenuItem>

@foreach (var menuItem in Model)
{
    <div class="menu-item-card bg-white rounded-lg shadow-sm border hover:shadow-lg transition-all transform hover:-translate-y-1 @(menuItem.HasActiveDiscount ? "ring-2 ring-purple-400" : "") @(!menuItem.IsActive ? "opacity-60" : "")"
         data-is-active="@menuItem.IsActive.ToString().ToLower()"
         data-has-discount="@menuItem.HasActiveDiscount.ToString().ToLower()">


        <div class="relative h-28 bg-gradient-to-br from-gray-100 to-gray-200 rounded-t-lg overflow-hidden">
            @if (!string.IsNullOrEmpty(menuItem.ImagePath))
            {
                <img src="@menuItem.ImagePath" alt="@menuItem.ItemName" class="w-full h-full object-cover @(!menuItem.IsActive ? "grayscale" : "")">
            }
            else
            {
                <div class="w-full h-full flex items-center justify-center">
                    <i class="fas fa-utensils text-3xl text-gray-400"></i>
                </div>
            }


            <div class="absolute top-1.5 right-1.5">
                @if (menuItem.IsActive)
                {
                    <span class="bg-green-500 text-white text-xs px-2 py-0.5 rounded-full font-semibold shadow-md flex items-center space-x-1">
                        <i class="fas fa-check-circle text-xs"></i>
                        <span>Active</span>
                    </span>
                }
                else
                {
                    <span class="bg-gray-500 text-white text-xs px-2 py-0.5 rounded-full font-semibold shadow-md flex items-center space-x-1">
                        <i class="fas fa-times-circle text-xs"></i>
                        <span>Inactive</span>
                    </span>
                }
            </div>


            @if (menuItem.HasActiveDiscount)
            {
                <div class="absolute top-1.5 left-1.5">
                    <span class="bg-gradient-to-r from-red-500 to-pink-500 text-white text-xs px-2 py-0.5 rounded-full font-bold shadow-lg animate-pulse">
                        <i class="fas fa-percent text-xs mr-0.5"></i>@(menuItem.DiscountPercentage?.ToString("0"))%
                    </span>
                </div>
            }

   
            @if (menuItem.Stock <= 5 && menuItem.Stock > 0 && menuItem.IsActive)
            {
                <div class="absolute bottom-1.5 left-1.5">
                    <span class="bg-orange-500 text-white text-xs px-2 py-0.5 rounded-full font-semibold shadow-md">
                        <i class="fas fa-exclamation-triangle text-xs"></i> Low
                    </span>
                </div>
            }
            else if (menuItem.Stock == 0)
            {
                <div class="absolute bottom-1.5 left-1.5">
                    <span class="bg-red-600 text-white text-xs px-2 py-0.5 rounded-full font-semibold shadow-md">
                        <i class="fas fa-times-circle text-xs"></i> Habis
                    </span>
                </div>
            }
        </div>

    
        <div class="p-2.5">
            <div class="mb-2">
                <h3 class="font-bold text-xs text-gray-800 mb-0.5 line-clamp-1" title="@menuItem.ItemName">
                    @menuItem.ItemName
                </h3>
                @if (!string.IsNullOrEmpty(menuItem.Description))
                {
                    <p class="text-gray-500 text-xs line-clamp-1">@menuItem.Description</p>
                }
            </div>

            <div class="mb-2">
                @if (menuItem.HasActiveDiscount)
                {
                    <div class="space-y-0.5">
                        <div class="flex items-center justify-between">
                            <span class="text-sm font-bold text-red-600">
                                Rp @menuItem.FinalPrice.ToString("N0", new System.Globalization.CultureInfo("id-ID"))
                            </span>
                            <span class="bg-red-100 text-red-800 text-xs px-1.5 py-0.5 rounded font-bold">
                                -@(menuItem.DiscountPercentage?.ToString("0"))%
                            </span>
                        </div>
                        <p class="text-gray-400 text-xs line-through">
                            Rp @menuItem.Price.ToString("N0", new System.Globalization.CultureInfo("id-ID"))
                        </p>
                    </div>
                }
                else
                {
                    <span class="text-sm font-bold text-blue-600">
                        Rp @menuItem.Price.ToString("N0", new System.Globalization.CultureInfo("id-ID"))
                    </span>
                }
            </div>


            <div class="flex items-center justify-between text-xs mb-2 pb-2 border-b border-gray-100">
                <div class="flex items-center space-x-1">
                    <i class="fas fa-box text-gray-400"></i>
                    <span class="text-gray-600 font-medium @(menuItem.Stock <= 5 ? "text-orange-600 font-bold" : "")">
                        @menuItem.Stock
                    </span>
                </div>
                <div class="flex items-center space-x-1">
                    <i class="fas fa-tag text-gray-400"></i>
                    <span class="text-gray-500 truncate max-w-[60px]" title="@menuItem.Category?.CategoryName">
                        @menuItem.Category?.CategoryName
                    </span>
                </div>
            </div>

 
            <div class="flex space-x-1.5">
                <button onclick="showEditMenuModal(@menuItem.MenuItemId)"
                        class="flex-1 @(menuItem.HasActiveDiscount ? "bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700" : "bg-blue-600 hover:bg-blue-700") text-white text-xs py-1.5 px-2 rounded-md transition-all flex items-center justify-center space-x-1 font-semibold shadow-sm">
                    <i class="fas fa-edit text-xs"></i>
                    <span>Edit</span>
                </button>
                <button onclick="deleteMenuItem(@menuItem.MenuItemId, '@Html.Raw(Html.Encode(menuItem.ItemName))')"
                        class="bg-red-600 hover:bg-red-700 text-white text-xs py-1.5 px-2.5 rounded-md transition-all shadow-sm">
                    <i class="fas fa-trash text-xs"></i>
                </button>
            </div>
        </div>
    </div>
}

@if (!Model.Any())
{
    <div class="col-span-full">
        <div class="bg-white rounded-xl shadow-sm border-2 border-dashed border-gray-300 p-12 text-center">
            <div class="w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <i class="fas fa-utensils text-4xl text-gray-400"></i>
            </div>
            <h3 class="text-lg font-bold text-gray-700 mb-2">Tidak Ada Menu</h3>
            <p class="text-gray-500 text-sm mb-4">Belum ada menu item dalam kategori ini.</p>
            <button onclick="showAddMenuModal()" class="bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white px-6 py-2.5 rounded-lg transition-all shadow-lg transform hover:scale-105 font-semibold">
                <i class="fas fa-plus mr-2"></i>Tambah Menu Baru
            </button>
        </div>
    </div>
}

<script>
        function deleteMenuItem(menuItemId, itemName) {
        const confirmDialog = document.createElement('div');
        confirmDialog.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 backdrop-blur-sm';
        confirmDialog.innerHTML = `
            <div class="bg-white rounded-2xl shadow-2xl p-8 max-w-md mx-4 animate-scale-in">
                <div class="text-center">
                    <div class="w-16 h-16 bg-gradient-to-br from-red-100 to-red-200 rounded-full flex items-center justify-center mx-auto mb-4">
                        <i class="fas fa-trash text-3xl text-red-600"></i>
                    </div>
                    <h3 class="text-xl font-bold text-gray-800 mb-2">Hapus Menu Permanent</h3>
                    <p class="text-gray-600 mb-2">Apakah Anda yakin ingin menghapus menu:</p>
                    <p class="font-bold text-gray-800 mb-4">"${itemName}"</p>
                    <div class="bg-red-50 border border-red-200 rounded-lg p-3 mb-4">
                        <p class="text-sm text-red-800 font-medium">
                            <i class="fas fa-exclamation-triangle mr-1"></i>
                            Menu akan dihapus PERMANENT dari database!
                        </p>
                        <p class="text-xs text-red-600 mt-1">
                            Jika menu sudah pernah ada dalam transaksi, menu hanya akan dinonaktifkan.
                        </p>
                    </div>
                    <div class="flex space-x-3">
                        <button onclick="this.closest('.fixed').remove()" class="flex-1 bg-gray-100 hover:bg-gray-200 text-gray-800 py-3 px-4 rounded-lg transition-colors font-semibold">
                            <i class="fas fa-times mr-2"></i>Batal
                        </button>
                        <button onclick="confirmDeleteMenuItem(${menuItemId}); this.closest('.fixed').remove();" class="flex-1 bg-gradient-to-r from-red-600 to-red-700 hover:from-red-700 hover:to-red-800 text-white py-3 px-4 rounded-lg transition-colors font-semibold shadow-lg">
                            <i class="fas fa-trash mr-2"></i>Hapus Permanent
                        </button>
                    </div>
                </div>
            </div>
        `;
        document.body.appendChild(confirmDialog);
    }

    function confirmDeleteMenuItem(menuItemId) {
        const formData = new FormData();
        formData.append('menuItemId', menuItemId);
        formData.append('__RequestVerificationToken', getAntiForgeryToken());

        showLoading();

        fetch('/Product/DeleteMenuItem', {
            method: 'POST',
            body: formData
        })
        .then(response => response.ok ? response.json() : Promise.reject('Network error'))
        .then(data => {
            hideLoading();
            if (data.success) {
                showNotification(data.message, 'success');
                const activeTab = document.querySelector('.category-tab.bg-blue-600');
                if (activeTab) {
                    const categoryId = parseInt(activeTab.getAttribute('data-category-id'));
                    setTimeout(() => loadProductCategory(categoryId), 500);
                }
            } else {
                showNotification(data.message || 'Terjadi kesalahan', 'error');
            }
        })
        .catch(error => {
            hideLoading();
            console.error('Error:', error);
            showNotification('Terjadi kesalahan saat menghapus menu', 'error');
        });
    }
</script>

<style>
    .line-clamp-1 {
        display: -webkit-box;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    keyframes scale-in {
        from

    {
        transform: scale(0.9);
        opacity: 0;
    }

    to {
        transform: scale(1);
        opacity: 1;
    }

    }

    .animate-scale-in {
        animation: scale-in 0.2s ease-out;
    }

    .menu-item-card {
        transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

        .menu-item-card:hover {
            transform: translateY(-4px);
        }
</style>